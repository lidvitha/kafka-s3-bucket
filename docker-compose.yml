version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092

  connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: connect-1
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      AWS_ACCESS_KEY_ID: "AKIAY4SS7RQ7WNIXQX7E"
      AWS_SECRET_ACCESS_KEY: "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"
      AWS_REGION: "us-east-1"
    volumes:
      - confluent-hub-components:/usr/share/confluent-hub-components
    command: "bash -c 'confluent-hub install --no-prompt confluentinc/kafka-connect-s3:latest && /etc/confluent/docker/run'"

volumes:
  confluent-hub-components:



  #  docker exec -it connect /bin/bash
  #  cd /usr/share/java/kafka-connect-s3/
  #  /usr/share/confluent-hub-components
  #  ls -l
#      curl -s http://localhost:8083/connector-plugins | jq .
#  curl -s http://localhost:8083/connectors/demo/status | jq .
#




#  curl -i -X PUT -H "Accept:application/json" \
#  -H  "Content-Type:application/json" http://localhost:8083/connectors/sink-s3-voluble/config \
#  -d '
#  {
#    "connector.class": "io.confluent.connect.s3.S3SinkConnector",
#    "key.converter":"org.apache.kafka.connect.storage.StringConverter",
#    "tasks.max": "1",
#    "topics": "test-topic",
#    "s3.region": "us-east-1",
#    "s3.bucket.name": "demo-kafka-s3",
#    "flush.size": "65536",
#    "storage.class": "io.confluent.connect.s3.storage.S3Storage",
#    "format.class": "io.confluent.connect.s3.format.avro.AvroFormat",
#    "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
#    "schema.compatibility": "NONE",
#    "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
#    "transforms": "AddMetadata",
#    "transforms.AddMetadata.type": "org.apache.kafka.connect.transforms.InsertField$Value",
#    "transforms.AddMetadata.offset.field": "_offset",
#    "transforms.AddMetadata.partition.field": "_partition"
#  }
#  '

